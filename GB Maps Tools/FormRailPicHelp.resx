<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwAGBAQEBQQGBQUGCQYFBgkLCAYG
        CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8f/9sAQwEHBwcNDA0YEBAY
        GhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA
        ewCgAwERAAIRAQMRAf/EABwAAQACAwEBAQAAAAAAAAAAAAAFBgMEBwIBCP/EAEAQAAEDAwEFBQQGBgsA
        AAAAAAEAAgMRBAUSITFBEwZRgSIyB2FxUhSRQmIjMzShsdGCklPwwXKiQyS0FTV1CP/EABYBAQEBAAAA
        AAAAAAAAAAAAAAABAv/EABgRAQEBAQEAAAAAAAAAAAAAAAABERIC/9oADAMBAAIRAxEAPwD9UoCAgICA
        gICAgICAg8ySxxt1PcGt7SgrvWF/1JBaY6XDcuAuythDdmcAl9pNctjnDQa6SWu8PH3ILIgICAgICAgI
        CAgICAgICAgEgCp2AbygwmaSTZAKj+a7y9w3u/ptQfY7djXcxxMkvxu3j3DcO5BF9V/kLT/scf8A6yJB
        MoCAgICAgICAgICAgICAg025awkyE+NgmZNkLVkctzbNcNcbJi4RuePqh3LdT3IM4hLyDMdZ+AeQd3Hv
        QZUHgzMqQ2r3DYQ3bt9vAII+9hhyDo7ed9GwzwziOKr364ZGys1kAho1M2/rQSaAgICAgICAgICAgICD
        G64hEvJ1tM2nXygRr01pq076V4oGmR/nOlvBo395/Ygj4GQRdQXzg1rCbS0BcAASBJcU2oN2S6AB0ihp
        Uaga+8MHiP0IIzAHqC4wtjLmY2xZR8Q+ejqGxtkI8WljHPr3vQSXybXbJXl7aU5Y8LP4R/XVBnYxjGhr
        GhrRua0UH6EH1AQEBAQEBAQEBAQCQN6DVjvDNfXFm1pYYGRPdIeIlLtgHCmhBpG2hj6l+d5Qr8lyTc0F
        fxdWjX+miDPaXWVnnu2y2oggimDLSTWDzYuUxxkI3t+8c5tKcKoNllr94ZXkcwhrXFg0khpJALtriPFu
        qgyxxRxijGhoO004lB6QEBAQEBAQEBAQEBAQEHmTWGEsAc8eUHYKoI92HZdQyfPbZ7qKJl6IXPYxxiqf
        Bt1NGpx41QSDY2NNQ0V7eKD0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgINHI53DY389ew27qV0PeA8j2N8x+hNERF6jdGyvmjZkAZLd+iRnLkqCRUGmnykb
        ip1DHnHepfRd9PNbx5BsNxA4iWG4a+FwAJAf4wBodSrXJ1FxZIJ4Z4mTQSNlieKskYQ5pHaCNiqPaAgI
        CAgICAgICAgICAgICDk/rBhJYcla5uJtYbhrbacjhI2pYT/abs7lmjnt1ayzPZc2kjYclC0tie6uiVm/
        lTcdNdx3tO724alYmyY/NuMNw2TH5q03hp0XEW3zsf8A4kTjx2tPEcFFSOG626q6PmJuKzY/VtuYWOkg
        IPG4t2nVGftxbO0BanpMdd6Z9UenMzDEZJmWsko8Emtr7d5+xMPD3Ootz0yuIIcA5pqDtBG4hUEBAQEB
        AQEBAQEBAQEBBp5jE2mWxs+Pu26oZ2lpPFp3tc2vFp2hBwHMYq6wuUlxt74XxE6ZNtJGfUe2vA/rWLBH
        3uLt8oyPmOdDeQE/K38LqSxOpU0dxB4g7CstStVnUF5ip2WXUbWsY92i2y0Y028vZzdv3DyeB8J4FRWW
        56Xj5rrzCznF3ch1TcoNdbzV/mwHwPr2ih9qGtzC+qXU3ScjIcyx1rag6Wyx67nHOHtH4tv+r2rU9Jjr
        nT3qtgsjFD84W2rpfJcscJbV+zeJW+X95anpldYpopoxJE9skbtrXsIc0+4haHpAQEBAQEBAQEBAQEBB
        WeuujoeosbWICPJ2wLrSbZt2bYnH4XfoO1SwcMe26tZ5bW5Y6KeB+iWN2xzXM/Ysoz+C4gkhmjbNbvqJ
        I30LSD5WgOr7d6zjWoN+KzXTn+Z6fpkMRSpw0rqPjFR+UkNXca6HbPco1qWxXUmIzkMrIT95F4LuznYW
        TxuO9skR1Hv3FMS6jrjos28r7zp26kxFy865Yo2a7aZ28CSB4bH3t2pqvWK9R+oulJ3Ny0UmLaKVvrCt
        zYvNd8sR1GP6CtSpy6/036xWV7DG++jZLbvALchYnnRGvxNFXDuqtT0li+43LY3JwCewuY7iI7yw1I9j
        hvB960jbQEBAQEBAQEBAQEBBRvUboIZmF2UxrAMvC2j2CgE7G/VP2x9U9yliOOiWRri06o6PILHeEtI2
        UoeI3bljFb8M7I3O0P2dlTTwAB/0VWbGois10pjsxMy+glkx+Wt9TrW+tqiffQEn67Sd4KGoi26rynTs
        0Vp1dAIYntIhzVswGJ9N3OjpqjPCoFPYquLi2Szu7Vr6sntrhoMbuYwxvB+HQKEKIq9/0FbR3EmR6dvX
        Ya/eDstdRheQSPvInDSQTv2IusFv1r1N05cQydSWMsOnwx5vGVA2cZIdjh9qn0K6Y6p0l6zz3Vpz+bDn
        LEGhuIXNjnYB8bKD+81q1PTNjouD626czJbHa3QZckV+VmHLk7gdjv3SVqVE6qCAgICAgICAgICDnfqP
        6ffPc3N4lh+eA1XduwVMwa2gewfG3s4+/fLDHJIJZGtL2iukhrnHZTjTQa9h20Czg2uYySBsjT96AWxx
        t2EgO7TtOzesqzE2VxA+O4ibcNOx5edQ0OIAqK7d9FKsqozdJ5rpyb5vo65ZLrfW4wkpEkDt5DmFxHLc
        R8Kq6u3SjOp85aNuTiMjazAuZLayQkNa5pINJHBjXA7wU5S1Z4PTfP3bWmayEYO/5icbiOIZqTmmou6/
        8ywXWQGTgygwuQ1B3Ox7HUqO1pdGHA8Vrk6X229KMKWN/wBxuZryVu3U0NhbX2BoJH8Ss8spWz6ay2LA
        Zi8xK+2b5bS/aLhgHY2QGORo71cE9AbgsHPa1snHQS5p91QCqMiAgICAgICAgICDmfqN6fCR783i2ubt
        15C2jbqNAPxoW0PjG9w4+9Swc3w+LyWYnEGMtZJZOWIzoGprNRqXaj4WV31Kyjp+D9JLcM15ubWHhuqy
        tyWx1Hxv3u7qK8qvlli8bYxtjs7WKBjRQCNgbsHtC0NlAQEBAQEBAQEBAQEBAQEBAQRfTv5J/wCS/Ff/
        AMf+F5j5vt/F7UEogICAgICAgICAg//Z
</value>
  </data>
</root>